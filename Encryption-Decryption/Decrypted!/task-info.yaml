type: edu
custom_name: stage3
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                new SimpleTestCase(
                    "enc\n" +
                        "Welcome to hyperskill!\n" +
                        "5",
                    "\\jqhtrj%yt%m~ujwxpnqq&"),
                new SimpleTestCase(
                    "enc\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "enc\n" +
                        "012345678\n" +
                        "1",
                    "123456789"),
                new SimpleTestCase(
                    "dec\n" +
                        "\\jqhtrj%yt%m~ujwxpnqq&\n" +
                        "5",
                    "Welcome to hyperskill!"),
                new SimpleTestCase(
                    "dec\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "dec\n" +
                        "222233334444\n" +
                        "1",
                    "111122223333")
            );
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            String word = scanner.nextLine();
            int key = scanner.nextInt();
            for (int i = 0; i < word.length(); i++){
                if(getIntCode(word.charAt(i)) > 96 && getIntCode(word.charAt(i)) < 123) {
                   if(getIntCode(word.charAt(i)) - 97 + key > 25) {
                       System.out.print(getCharCode(getIntCode(word.charAt(i)) + key - 26));
                   }
                   else{
                       System.out.print(getCharCode(getIntCode(word.charAt(i)) + key ));
                   }
                } else {
                    System.out.print(word.charAt(i));
                }
            }
        }
        public static int getIntCode(char ch) {
            return (int) ch;
        }
        public  static char getCharCode(int code){
            return  (char) code;
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/247/implement
status: Unchecked
record: 3
